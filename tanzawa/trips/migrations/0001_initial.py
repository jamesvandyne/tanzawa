# Generated by Django 3.2.2 on 2021-08-22 21:16

import uuid

import core.constants
import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("post", "0008_tpost_visibility"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TTrip",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=128)),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("p_summary", models.TextField(blank=True)),
                ("d_start", models.DateField(blank=True, null=True, verbose_name="Start Date")),
                ("d_end", models.DateField(blank=True, null=True, verbose_name="End Date")),
                (
                    "visibility",
                    models.SmallIntegerField(
                        choices=[(1, "Everyone"), (2, "Only me"), (3, "People who know the url")],
                        default=core.constants.Visibility["PUBLIC"],
                    ),
                ),
                (
                    "p_author",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "verbose_name": "Trip",
                "verbose_name_plural": "Trips",
                "db_table": "t_trip",
            },
        ),
        migrations.CreateModel(
            name="TTripPost",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("t_post", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="post.tpost")),
                ("t_trip", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="trips.ttrip")),
            ],
            options={
                "verbose_name": "Trip-Post",
                "verbose_name_plural": "Trip-Posts",
                "db_table": "t_trip_entry",
            },
        ),
        migrations.CreateModel(
            name="TTripLocation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("street_address", models.CharField(blank=True, default="", max_length=128)),
                ("locality", models.CharField(blank=True, default="", max_length=128)),
                ("region", models.CharField(blank=True, default="", max_length=64)),
                ("country_name", models.CharField(blank=True, default="", max_length=64)),
                ("postal_code", models.CharField(blank=True, default="", max_length=16)),
                ("point", django.contrib.gis.db.models.fields.PointField(geography=True, srid=3857)),
                (
                    "t_trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="t_trip_location", to="trips.ttrip"
                    ),
                ),
            ],
            options={
                "verbose_name": "Trip Location",
                "verbose_name_plural": "Locations",
                "db_table": "t_trip_location",
            },
        ),
        migrations.AddField(
            model_name="ttrip",
            name="posts",
            field=models.ManyToManyField(through="trips.TTripPost", to="post.TPost"),
        ),
    ]
